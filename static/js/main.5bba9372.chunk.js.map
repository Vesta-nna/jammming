{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["accessToken","SearchBar","props","state","term","search","bind","handleTermChange","this","length","onSearch","setState","event","target","value","className","placeholder","onChange","onClick","React","Component","Track","addTrack","removeTrack","isRemoval","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistName","playlistTracks","onSave","Spotify","getAccessToken","console","log","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","savePlaylist","trackUris","userId","method","body","JSON","stringify","playlistId","uris","App","updatePlaylistName","find","savedTrack","push","splice","indexOf","filter","currentTrack","res","array_el","anotherOne_el","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bba9372.chunk.js","sourcesContent":["const clientId = '475be2057bb24d3cb6619f696e246d1c'\nconst redirectUri = 'http://localhost:3000/'\nlet accessToken\n\nconst Spotify = {\n  getAccessToken() {\n    console.log('into accessToken')\n    if (accessToken) {\n      return accessToken\n    }\n\n    // check for access token match\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/)\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/)\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1]\n      const expiresIn = Number(expiresInMatch[1])\n      // This clears the parameter, allowing us to grab a new access token when it expires.\n      window.setTimeout(() => accessToken = '', expiresIn * 1000)\n      window.history.pushState('Access Token', null, '/')\n      return accessToken\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`\n      window.location = accessUrl\n    }\n  },\n\n  search(term) {\n    const accessToken = this.getAccessToken()\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      return response.json()\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return []\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }))\n    })\n  },\n\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris.length) {\n      return\n    }\n\n    const accessToken = this.getAccessToken()\n    const headers = { Authorization: `Bearer ${accessToken}` }\n    let userId\n\n    return fetch('https://api.spotify.com/v1/me', { headers: headers }\n    ).then(response => {\n      return response.json()\n    }).then(jsonResponse => {\n      userId = jsonResponse.id\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        headers: headers,\n        method: 'POST',\n        body: JSON.stringify({ name: name })\n      }).then(response => response.json()\n      ).then(jsonResponse => {\n        const playlistId = jsonResponse.id\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\n          headers: headers,\n          method: 'POST',\n          body: JSON.stringify({ uris: trackUris })\n        })\n      })\n    })\n  }\n}\n\nexport default Spotify","import React from 'react'\n\nimport './SearchBar.css'\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      term: ''\n    }\n\n    this.search = this.search.bind(this)\n    this.handleTermChange = this.handleTermChange.bind(this)\n  }\n\n  search() {\n    if (this.state.term.length <= 0) {\n      return\n    }\n    this.props.onSearch(this.state.term)\n    this.setState({\n      term: ''\n    })\n  }\n\n  handleTermChange(event) {\n    this.setState({\n      term: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input placeholder=\"Enter A Song, Album, or Artist\" onChange={this.handleTermChange} value={this.state.term}/>\n        <button className=\"SearchButton\" onClick={this.search} >SEARCH</button>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar","import React from 'react'\n\nimport './Track.css'\n\nclass Track extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.addTrack = this.addTrack.bind(this)\n    this.removeTrack = this.removeTrack.bind(this)\n  }\n\n  renderAction(){\n    if (this.props.isRemoval) {\n      return <button className=\"Track-action\" onClick={this.removeTrack}>-</button>\n    } else {\n      return <button className=\"Track-action\" onClick={this.addTrack}>+</button>\n    }\n  }\n\n  addTrack() {\n    this.props.onAdd(this.props.track)\n  }\n\n  removeTrack() {\n    this.props.onRemove(this.props.track)\n  }\n\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p>{this.props.track.artist} | {this.props.track.album}</p>\n        </div>\n        {this.renderAction()}\n      </div>\n    )\n  }\n}\n\nexport default Track","import React from 'react'\nimport Track from '../Track/Track'\n\nimport './TrackList.css'\n\nclass TrackList extends React.Component {\n  render() {\n    return (\n      <div className=\"TrackList\">\n        {this.props.tracks.map((track) => {\n            return <Track track={track} \n                key={track.id}\n                onAdd={this.props.onAdd}\n                onRemove={this.props.onRemove}\n                isRemoval={this.props.isRemoval} />\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default TrackList","import React from 'react'\n\nimport TrackList from '../TrackList/TrackList'\n\nimport './SearchResults.css'\n\nclass SearchResults extends React.Component {\n  render() {\n    return (\n      <div className=\"SearchResults\">\n        <h2>Results</h2>\n        <TrackList  tracks={this.props.searchResults} \n            onAdd={this.props.onAdd}\n            isRemoval={false} />\n      </div>\n    )\n  }\n}\n\nexport default SearchResults","import React from 'react'\n\nimport TrackList from '../TrackList/TrackList'\n\nimport './Playlist.css'\n\nclass Playlist extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleNameChange = this.handleNameChange.bind(this)\n  }\n\n  handleNameChange(event) {\n    this.props.onNameChange(event.target.value)\n  }\n\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input defaultValue={this.props.playlistName} onChange={this.handleNameChange} />\n        <TrackList tracks={this.props.playlistTracks} \n            onRemove={this.props.onRemove} \n            isRemoval={true} />\n        <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\n      </div>\n    )\n  }\n}\n\nexport default Playlist","import React from 'react'\n\nimport SearchBar from '../SearchBar/SearchBar'\nimport SearchResults from '../SearchResults/SearchResults'\nimport Playlist from '../Playlist/Playlist'\nimport Spotify from '../../util/Spotify'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      searchResults: [],\n      playlistName: \"My Playlist Name\",\n      playlistTracks: []\n    }\n\n    this.addTrack = this.addTrack.bind(this)\n    this.removeTrack = this.removeTrack.bind(this)\n    this.updatePlaylistName = this.updatePlaylistName.bind(this)\n    this.savePlaylist = this.savePlaylist.bind(this)\n    this.search = this.search.bind(this)\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track)\n    let search = this.state.searchResults\n    search.splice(search.indexOf(track), 1)\n    this.setState({\n      playlistTracks: tracks,\n      searchResults: search\n    })\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id)\n\n    this.setState({\n      playlistTracks: tracks\n    })\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    })\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri)\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      })\n    })\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      const res = searchResults.filter((array_el) => \n        this.state.playlistTracks.filter((anotherOne_el) => \n          anotherOne_el.id === array_el.id ).length === 0)\n      this.setState({\n        searchResults: res\n      })\n    })\n  }\n\n  render() {\n    const { searchResults, playlistName, playlistTracks } = this.state\n\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={searchResults} \n                onAdd={this.addTrack} />\n            <Playlist playlistName={playlistName} \n                playlistTracks={playlistTracks} \n                onRemove={this.removeTrack}\n                onNameChange={this.updatePlaylistName}\n                onSave={this.savePlaylist} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}